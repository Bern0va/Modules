import requests
from hikkatl.types import Message
from .. import loader, utils

@loader.tds
class GeminiAIMod(loader.Module):
    """–ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ Gemini API"""
    strings = {
        "name": "GeminiAI",
        "no_args": "üö´ –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã",
        "api_error": "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"
    }

    async def gemicmd(self, message: Message):
        """–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ò–ò. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .gemi <–≤–æ–ø—Ä–æ—Å>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, self.strings["no_args"])
            return

        try:
            # –§–æ—Ä–º–∏—Ä—É–µ–º URL —Å –≤–æ–ø—Ä–æ—Å–æ–º
            url = f"https://onlpark.pythonanywhere.com/gemini={requests.utils.quote(args)}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            response = requests.get(url)
            response.raise_for_status()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
            answer = response.text
            await utils.answer(message, f"ü§ñ <b>GeminiAI –æ—Ç–≤–µ—á–∞–µ—Ç:</b>\n\n{answer}")
            
        except Exception as e:
            logging.exception("API error")
            await utils.answer(message, self.strings["api_error"])

    async def client_ready(self, client, db):
        self._client = client
